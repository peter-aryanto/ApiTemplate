// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Template1;

#nullable disable

namespace Template1.Entities.Migrations
{
    [DbContext(typeof(Context1))]
    partial class Context1ModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Template1.Entities.AdditionalInfo", b =>
                {
                    b.Property<int>("AdditionalInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdditionalInfoId"));

                    b.Property<int>("KeyValueId")
                        .HasColumnType("int");

                    b.HasKey("AdditionalInfoId");

                    b.HasIndex("KeyValueId");

                    b.ToTable("AdditionalInfos");
                });

            modelBuilder.Entity("Template1.Entities.KeyValue", b =>
                {
                    b.Property<int>("KeyValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KeyValueId"));

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KeyValueId");

                    b.ToTable("KeyValues");
                });

            modelBuilder.Entity("Template1.Entities.AdditionalInfo", b =>
                {
                    b.HasOne("Template1.Entities.KeyValue", "KeyValue")
                        .WithMany("AdditionalInfos")
                        .HasForeignKey("KeyValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KeyValue");
                });

            modelBuilder.Entity("Template1.Entities.KeyValue", b =>
                {
                    b.Navigation("AdditionalInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
